{"ast":null,"code":"import React,{useState,useEffect}from'react';import ImageUpload from'./components/ImageUpload';import Resizer from'react-image-file-resizer';import ImageModal from'./components/ImageModal';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[uploadedFiles,setUploadedFiles]=useState([]);const[divideTime,setDivideTime]=useState(false);const[totalDuration,setTotalDuration]=useState(0);const[loading,setLoading]=useState(false);const[message,setMessage]=useState('');const[startDate,setStartDate]=useState('2024-11-25');const[endDate,setEndDate]=useState('2024-11-25');const[startTime,setStartTime]=useState('10:00');const[endTime,setEndTime]=useState('22:00');const[isModalOpen,setIsModalOpen]=useState(false);const[fetchedImages,setFetchedImages]=useState([]);// State for fetched images\n// Fetch images from the backend\nuseEffect(()=>{const fetchImages=async()=>{const response=await fetch('https://ad-display-backend.onrender.com/api/images');const data=await response.json();setFetchedImages(data);};fetchImages();},[]);const handleDeleteImage=async index=>{const imageToDelete=fetchedImages[index];try{const response=await fetch(`https://ad-display-backend.onrender.com/api/images/${imageToDelete.id}`,{method:'DELETE',headers:{'Content-Type':'application/json'}});if(response.ok){// If the delete was successful, update the state\nconst updatedFiles=[...fetchedImages];updatedFiles.splice(index,1);setFetchedImages(updatedFiles);setMessage(`Image ${imageToDelete.imageName} deleted successfully!`);}else{const errorData=await response.json();setMessage(errorData.error||`Failed to delete ${imageToDelete.imageName}.`);}}catch(error){console.error('Error deleting image:',error);setMessage('An error occurred while deleting the image.');}};const resizeImage=file=>new Promise(resolve=>{Resizer.imageFileResizer(file,800,800,'JPEG',90,0,uri=>resolve(uri),'base64');});const handleUpload=async files=>{const resizedImages=await Promise.all(Array.from(files).map(file=>resizeImage(file)));setUploadedFiles(resizedImages.map((base64,index)=>({file:files[index],base64,duration:0})));};const handleRemoveImage=index=>{const updatedFiles=[...uploadedFiles];updatedFiles.splice(index,1);setUploadedFiles(updatedFiles);};const handleDurationChange=(index,value)=>{const updatedFiles=[...uploadedFiles];updatedFiles[index].duration=value;setUploadedFiles(updatedFiles);};const calculateDividedDuration=()=>{if(uploadedFiles.length>0&&totalDuration>0){return Math.floor(totalDuration*60/uploadedFiles.length);}return 0;};const isSubmitDisabled=()=>{if(!startDate||!endDate||!startTime||!endTime)return true;if(divideTime||uploadedFiles.length===0)return false;return uploadedFiles.some(image=>image.duration===0);};const handleSubmit=async()=>{setLoading(true);setMessage('');for(const image of uploadedFiles){const payload={imageName:image.file.name,imageUrl:image.base64,startDate,endDate,startTime,endTime,duration:divideTime?calculateDividedDuration():Number(image.duration),userId:1};try{const response=await fetch('https://ad-display-backend.onrender.com/api/images',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(response.ok){const result=await response.json();setMessage(`Image ${image.file.name} uploaded successfully!`);}else{const errorData=await response.json();setMessage(errorData.error||`Failed to upload ${image.file.name}.`);}}catch(err){setMessage(`An error occurred while uploading ${image.file.name}.`);}}setLoading(false);setUploadedFiles([]);};const handleFetchImages=async()=>{try{const response=await fetch('https://ad-display-backend.onrender.com/api/images');const result=await response.json();console.log('Fetched images:',result);// Log the fetched images\n// Check if the fetch was successful\nif(result.success){setFetchedImages(result.data);// Update state with fetched images\nconsole.log('result.dataresult.data',result.data);}else{setMessage(result.message||'Failed to fetch images.');}}catch(error){console.error('Error fetching images:',error);// Log the error for debugging\nsetMessage('An error occurred while fetching images.');}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',fontFamily:'Arial'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Ad Display Portal v31\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Common Start/End Dates and Times\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'10px'},children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Start Date:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:startDate,onChange:e=>setStartDate(e.target.value),style:{marginLeft:'10px'}})]})}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'10px'},children:/*#__PURE__*/_jsxs(\"label\",{children:[\"End Date:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:endDate,onChange:e=>setEndDate(e.target.value),style:{marginLeft:'10px'}})]})}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'10px'},children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Start Time:\",/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:startTime,onChange:e=>setStartTime(e.target.value),style:{marginLeft:'10px'}})]})}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'10px'},children:/*#__PURE__*/_jsxs(\"label\",{children:[\"End Time:\",/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:endTime,onChange:e=>setEndTime(e.target.value),style:{marginLeft:'10px'}})]})})]}),/*#__PURE__*/_jsx(ImageUpload,{onUpload:handleUpload}),uploadedFiles.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:divideTime,onChange:e=>setDivideTime(e.target.checked)}),\"Divide time Duration equally\"]}),divideTime&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px'},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Total Duration (in minutes): \"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:totalDuration,onChange:e=>setTotalDuration(e.target.value),style:{marginLeft:'10px'}})]})]}),uploadedFiles.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Uploaded Images\"}),uploadedFiles.map((image,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"img\",{src:image.base64,alt:image.file.name,style:{width:'60px',height:'60px'}}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:divideTime?calculateDividedDuration():image.duration,onChange:e=>handleDurationChange(index,e.target.value),disabled:divideTime,style:{marginLeft:'10px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRemoveImage(index),style:{marginLeft:'10px'},children:\"Remove\"})]},index))]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Image Gallery\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsModalOpen(true),children:\"Manage Images\"}),isModalOpen&&/*#__PURE__*/_jsx(ImageModal,{images:fetchedImages,onClose:()=>setIsModalOpen(false),onDelete:handleDeleteImage// Pass the delete handler\n}),message&&/*#__PURE__*/_jsx(\"p\",{children:message})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,disabled:isSubmitDisabled()||loading,style:{marginTop:'20px',padding:'10px 20px',backgroundColor:isSubmitDisabled()?'grey':'blue',color:'white'},children:loading?'Uploading...':'Submit'}),message&&/*#__PURE__*/_jsx(\"p\",{style:{marginTop:'20px',color:'red'},children:message}),isModalOpen&&/*#__PURE__*/_jsx(ImageModal,{images:fetchedImages// Pass fetched images to the modal\n,onClose:()=>setIsModalOpen(false),onDelete:handleDeleteImage// Corrected line\n})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","ImageUpload","Resizer","ImageModal","jsx","_jsx","jsxs","_jsxs","App","uploadedFiles","setUploadedFiles","divideTime","setDivideTime","totalDuration","setTotalDuration","loading","setLoading","message","setMessage","startDate","setStartDate","endDate","setEndDate","startTime","setStartTime","endTime","setEndTime","isModalOpen","setIsModalOpen","fetchedImages","setFetchedImages","fetchImages","response","fetch","data","json","handleDeleteImage","index","imageToDelete","id","method","headers","ok","updatedFiles","splice","imageName","errorData","error","console","resizeImage","file","Promise","resolve","imageFileResizer","uri","handleUpload","files","resizedImages","all","Array","from","map","base64","duration","handleRemoveImage","handleDurationChange","value","calculateDividedDuration","length","Math","floor","isSubmitDisabled","some","image","handleSubmit","payload","name","imageUrl","Number","userId","body","JSON","stringify","result","err","handleFetchImages","log","success","style","padding","fontFamily","children","marginBottom","type","onChange","e","target","marginLeft","onUpload","marginTop","checked","display","alignItems","src","alt","width","height","disabled","onClick","images","onClose","onDelete","backgroundColor","color"],"sources":["/Users/macbook/Desktop/ad-display-portal/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport ImageUpload from './components/ImageUpload';\nimport Resizer from 'react-image-file-resizer';\nimport ImageModal from './components/ImageModal';\n\nfunction App() {\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [divideTime, setDivideTime] = useState(false);\n  const [totalDuration, setTotalDuration] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [startDate, setStartDate] = useState('2024-11-25');\n  const [endDate, setEndDate] = useState('2024-11-25');\n  const [startTime, setStartTime] = useState('10:00');\n  const [endTime, setEndTime] = useState('22:00');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [fetchedImages, setFetchedImages] = useState([]); // State for fetched images\n\n  // Fetch images from the backend\n  useEffect(() => {\n    const fetchImages = async () => {\n        const response = await fetch('https://ad-display-backend.onrender.com/api/images');\n        const data = await response.json();\n        setFetchedImages(data);\n    };\n    fetchImages();\n}, []);\n\nconst handleDeleteImage = async (index) => {\n    const imageToDelete = fetchedImages[index];\n\n    try {\n        const response = await fetch(`https://ad-display-backend.onrender.com/api/images/${imageToDelete.id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n\n        if (response.ok) {\n            // If the delete was successful, update the state\n            const updatedFiles = [...fetchedImages];\n            updatedFiles.splice(index, 1);\n            setFetchedImages(updatedFiles);\n            setMessage(`Image ${imageToDelete.imageName} deleted successfully!`);\n        } else {\n            const errorData = await response.json();\n            setMessage(errorData.error || `Failed to delete ${imageToDelete.imageName}.`);\n        }\n    } catch (error) {\n        console.error('Error deleting image:', error);\n        setMessage('An error occurred while deleting the image.');\n    }\n};\n\n \n  const resizeImage = (file) =>\n    new Promise((resolve) => {\n      Resizer.imageFileResizer(\n        file,\n        800,\n        800,\n        'JPEG',\n        90,\n        0,\n        (uri) => resolve(uri),\n        'base64'\n      );\n    });\n\n  const handleUpload = async (files) => {\n    const resizedImages = await Promise.all(\n      Array.from(files).map((file) => resizeImage(file))\n    );\n    setUploadedFiles(\n      resizedImages.map((base64, index) => ({\n        file: files[index],\n        base64,\n        duration: 0,\n      }))\n    );\n  };\n\n  const handleRemoveImage = (index) => {\n    const updatedFiles = [...uploadedFiles];\n    updatedFiles.splice(index, 1);\n    setUploadedFiles(updatedFiles);\n  };\n\n  const handleDurationChange = (index, value) => {\n    const updatedFiles = [...uploadedFiles];\n    updatedFiles[index].duration = value;\n    setUploadedFiles(updatedFiles);\n  };\n\n  const calculateDividedDuration = () => {\n    if (uploadedFiles.length > 0 && totalDuration > 0) {\n      return Math.floor((totalDuration * 60) / uploadedFiles.length);\n    }\n    return 0;\n  };\n\n  const isSubmitDisabled = () => {\n    if (!startDate || !endDate || !startTime || !endTime) return true;\n    if (divideTime || uploadedFiles.length === 0) return false;\n    return uploadedFiles.some((image) => image.duration === 0);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    setMessage('');\n\n    for (const image of uploadedFiles) {\n      const payload = {\n        imageName: image.file.name,\n        imageUrl: image.base64,\n        startDate,\n        endDate,\n        startTime,\n        endTime,\n        duration: divideTime ? calculateDividedDuration() : Number(image.duration),\n        userId: 1,\n      };\n\n      try {\n        const response = await fetch('https://ad-display-backend.onrender.com/api/images', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload),\n        });\n\n        if (response.ok) {\n          const result = await response.json();\n          setMessage(`Image ${image.file.name} uploaded successfully!`);\n        } else {\n          const errorData = await response.json();\n          setMessage(errorData.error || `Failed to upload ${image.file.name}.`);\n        }\n      } catch (err) {\n        setMessage(`An error occurred while uploading ${image.file.name}.`);\n      }\n    }\n\n    setLoading(false);\n    setUploadedFiles ([]);\n  };\n\n  const handleFetchImages = async () => {\n    try {\n      const response = await fetch('https://ad-display-backend.onrender.com/api/images');\n      const result = await response.json();\n      console.log('Fetched images:', result); // Log the fetched images\n  \n      // Check if the fetch was successful\n      if (result.success) {\n        setFetchedImages(result.data); // Update state with fetched images\n        console.log('result.dataresult.data', result.data)\n      } else {\n        setMessage(result.message || 'Failed to fetch images.');\n      }\n    } catch (error) {\n      console.error('Error fetching images:', error); // Log the error for debugging\n      setMessage('An error occurred while fetching images.');\n    }\n  };\n\n \n\n  return (\n    <div style={{ padding: '20px', fontFamily: 'Arial' }}>\n      <h1>Ad Display Portal v31</h1>\n\n      {/* Date and Time Input */}\n      <div style={{ marginBottom: '20px' }}>\n        <h3>Common Start/End Dates and Times</h3>\n        <div style={{ marginBottom: '10px' }}>\n          <label>\n            Start Date:\n            <input\n              type=\"date\"\n              value={startDate}\n              onChange={(e) => setStartDate(e.target.value)}\n              style={{ marginLeft: '10px' }}\n            />\n          </label>\n        </div>\n        <div style={{ marginBottom: '10px' }}>\n          <label>\n            End Date:\n            <input\n              type=\"date\"\n              value={endDate}\n              onChange={(e) => setEndDate(e.target.value)}\n              style={{ marginLeft: '10px' }}\n            />\n          </label>\n        </div>\n        <div style={{ marginBottom: '10px' }}>\n          <label>\n            Start Time:\n            <input\n              type=\"time\"\n              value={startTime}\n              onChange={(e) => setStartTime(e.target.value)}\n              style={{ marginLeft: '10px' }}\n            />\n          </label>\n        </div>\n        <div style={{ marginBottom: '10px' }}>\n          <label>\n            End Time:\n            <input\n              type=\"time\"\n              value={endTime}\n              onChange={(e) => setEndTime(e.target.value)}\n              style={{ marginLeft: '10px' }}\n            />\n          </label>\n        </div>\n      </div>\n\n      {/* Upload Section */}\n      <ImageUpload onUpload={handleUpload} />\n\n      {uploadedFiles.length > 0 && (\n        <div style={{ marginTop: '20px' }}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={divideTime}\n              onChange={(e) => setDivideTime(e.target.checked)}\n            />\n            Divide time Duration equally\n          </label>\n\n          {divideTime && (\n            <div style={{ marginTop: '10px' }}>\n              <label>Total Duration (in minutes): </label>\n              <input\n                type=\"number\"\n                value={totalDuration}\n                onChange={(e) => setTotalDuration(e.target.value)}\n                style={{ marginLeft: '10px' }}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {uploadedFiles.length > 0 && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Uploaded Images</h3>\n          {uploadedFiles.map((image, index) => (\n            <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n              <img src={image.base64} alt={image.file.name} style={{ width: '60px', height: '60px' }} />\n              <input\n                type=\"number\"\n                value={divideTime ? calculateDividedDuration() : image.duration}\n                onChange={(e) => handleDurationChange(index, e.target.value)}\n                disabled={divideTime}\n                style={{ marginLeft: '10px' }}\n              />\n              <button onClick={() => handleRemoveImage(index)} style={{ marginLeft: '10px' }}>\n                Remove\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Manage Button */}\n      <div>\n            <h1>Image Gallery</h1>\n            <button onClick={() => setIsModalOpen(true)}>Manage Images</button>\n            {isModalOpen && (\n                <ImageModal\n                    images={fetchedImages}\n                    onClose={() => setIsModalOpen(false)}\n                    onDelete={handleDeleteImage} // Pass the delete handler\n                />\n            )}\n            {message && <p>{message}</p>}\n        </div>\n\n      {/* Submit Button */} \n      <button\n        onClick={handleSubmit}\n        disabled={isSubmitDisabled() || loading}\n        style={{\n          marginTop: '20px',\n          padding: '10px 20px',\n          backgroundColor: isSubmitDisabled() ? 'grey' : 'blue',\n          color: 'white',\n        }}\n      >\n        {loading ? 'Uploading...' : 'Submit'}\n      </button>\n\n      {/* Message */}\n      {message && <p style={{ marginTop: '20px', color: 'red' }}>{message}</p>}\n\n      {/* Modal for Managing Images */}\n      {isModalOpen && (\n        <ImageModal\n          images={fetchedImages} // Pass fetched images to the modal\n          onClose={() => setIsModalOpen(false)}\n          onDelete={handleDeleteImage} // Corrected line\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}